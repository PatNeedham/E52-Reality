version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    environment:
      - VITE_BACKEND_URL=http://localhost:8080
      - VITE_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
    depends_on:
      - backend
      - otel-collector
    networks:
      - e52-network

  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/e52db
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
      otel-collector:
        condition: service_started
    networks:
      - e52-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=e52db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d e52db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - e52-network

  otel-collector:
    image: otel/opentelemetry-collector:0.80.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - e52-network

volumes:
  postgres_data:

networks:
  e52-network:
    driver: bridge
